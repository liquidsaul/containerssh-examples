name: 'Helm Chart Test'
description: 'Install a given helm chart'

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Install KinD
      shell: bash
      run: |
        sudo curl -Lo /usr/local/bin/kind https://kind.sigs.k8s.io/dl/v0.14.0/kind-linux-amd64
        sudo curl -Lo /usr/local/bin/kubectl "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        sudo chmod +x /usr/local/bin/kind /usr/local/bin/kubectl
    - name: Bring up KinD cluster
      shell: bash
      run: |
        kind create cluster --wait 300s
    - name: Wait for KinD
      shell: bash
      run: |
        set -ex
        UP=0
        for i in $(seq 1 30); do
          kubectl get nodes
          NODECOUNT=$(kubectl get nodes | grep kind-control-plane | grep -v NotReady | wc -l)
          if [ $NODECOUNT -eq "1" ]; then
            UP=1
            break
          fi
          sleep 5
        done
        if [ $UP -eq "0" ]; then
          echo "KinD cluster failed to come up"
          exit 1
        fi
        echo "KinD is ready for use."
    - name: Lint Helm Chart
      shell: bash
      run: |
        helm lint ./quick-start/helm/containerssh
    - name: Install Helm chart
      shell: bash
      run: |
        kubectl create namespace containerssh
        helm upgrade --install containerssh ./quick-start/helm/containerssh -n containerssh
    - name: Test Helm Chart
      shell: bash
      run: |
        sleep 30
        kubectl get svc -n containerssh containerssh-svc -o jsonpath='{.spec.clusterIP}'
        helm test containerssh -n containerssh    